name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
            python-version: [3.8, 3.9, 3.10.x, 3.11]
    
    steps:
      - uses: actions/checkout@v3

      - name: set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3 
        with:
          python-version: ${{ matrix.python-version }} 

      - name: Install Packages
        id: install
        run: make install
        continue-on-error: true

      - name: Lint
        id: lint
        run: make lint
        continue-on-error: true

      - name: Test
        id: test
        run: make test
        continue-on-error: true

      - name: Format
        id: format
        run: make format
        continue-on-error: true

      - name: Update Badges
        id: update_badges
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull
          if [ ${{ steps.install.outcome }} == failure ]; then
            sed -i 's/!\[${{ matrix.python-version }}Install\].*\.svg)/\!\[${{ matrix.python-version }}Install\](https:\/\/img.shields.io\/badge\/Python_${{ matrix.python-version }}_Install-Failure-red.svg)/g' README.md
          else
            sed -i 's/!\[${{ matrix.python-version }}Install\].*\.svg)/\!\[${{ matrix.python-version }}Install\](https:\/\/img.shields.io\/badge\/Python_${{ matrix.python-version }}_Install-Success-green.svg)/g' README.md
          fi
          if [ ${{ steps.lint.outcome }} == failure ]; then
            sed -i 's/!\[${{ matrix.python-version }}Lint\].*\.svg)/\!\[${{ matrix.python-version }}Lint\](https:\/\/img.shields.io\/badge\/Python_${{ matrix.python-version }}_Lint-Failure-red.svg)/g' README.md
          else
            sed -i 's/!\[${{ matrix.python-version }}Lint\].*\.svg)/\!\[${{ matrix.python-version }}Lint\](https:\/\/img.shields.io\/badge\/Python_${{ matrix.python-version }}_Lint-Success-green.svg)/g' README.md
          fi
          if [ ${{ steps.test.outcome }} == failure ]; then
            sed -i 's/!\[${{ matrix.python-version }}Test\].*\.svg)/\!\[${{ matrix.python-version }}Test\](https:\/\/img.shields.io\/badge\/Python_${{ matrix.python-version }}_Test-Failure-red.svg)/g' README.md
          else
            sed -i 's/!\[${{ matrix.python-version }}Test\].*\.svg)/\!\[${{ matrix.python-version }}Test\](https:\/\/img.shields.io\/badge\/Python_${{ matrix.python-version }}_Test-Success-green.svg)/g' README.md
          fi
          if [ ${{ steps.format.outcome }} == failure ]; then
            sed -i 's/!\[${{ matrix.python-version }}Format\].*\.svg)/\!\[${{ matrix.python-version }}Format\](https:\/\/img.shields.io\/badge\/Python_${{ matrix.python-version }}_Format-Failure-red.svg)/g' README.md
          else
            sed -i 's/!\[${{ matrix.python-version }}Format\].*\.svg)/\!\[${{ matrix.python-version }}Format\](https:\/\/img.shields.io\/badge\/Python_${{ matrix.python-version }}_Format-Success-green.svg)/g' README.md
          fi
          git add README.md
          git commit -am "Updte README.md"
          git push
        continue-on-error: true


    

      
